package com.topflytech.tftble.data;import android.content.Context;import android.net.ConnectivityManager;import android.net.NetworkInfo;import android.os.AsyncTask;import com.alibaba.fastjson.JSONObject;import com.inuker.bluetooth.library.utils.ByteUtils;import java.io.ByteArrayOutputStream;import java.io.IOException;import java.math.BigDecimal;import java.nio.ByteBuffer;import java.text.SimpleDateFormat;import java.util.ArrayList;import java.util.Arrays;import java.util.HashMap;import java.util.Date;import java.util.Locale;import java.util.Properties;import javax.mail.Authenticator;import javax.mail.Message;import javax.mail.MessagingException;import javax.mail.PasswordAuthentication;import javax.mail.Session;import javax.mail.Transport;import javax.mail.internet.InternetAddress;import javax.mail.internet.MimeMessage;public class MyUtils {    public static boolean isDebug = false;    public final static boolean isOpenBroadcastLog = false;    public final static HashMap<String,HashMap<String,Integer>> controlFunc = new HashMap<String,HashMap<String,Integer>>(){{        put("firmware",new HashMap<String, Integer>(){{            put("read",1);        }});        put("saveCount",new HashMap<String, Integer>(){{            put("read",2);        }});        put("readHistory",new HashMap<String, Integer>(){{            put("read",3);            put("len",8);        }});        put("readAlarm",new HashMap<String, Integer>(){{            put("read",5);            put("len",8);        }});        put("readNextHistory",new HashMap<String, Integer>(){{            put("read",6);            put("len",4);        }});        put("readNextAlarm",new HashMap<String, Integer>(){{            put("read",7);            put("len",4);        }});        put("readOriginData",new HashMap<String, Integer>(){{            put("read",8);            put("len",1);        }});        put("password",new HashMap<String, Integer>(){{            put("write",40);            put("len",6);        }});        put("resetFactory",new HashMap<String, Integer>(){{            put("write",41);            put("len",0);        }});        put("startRecord",new HashMap<String, Integer>(){{            put("write",42);            put("len",0);        }});        put("stopRecord",new HashMap<String, Integer>(){{            put("write",43);            put("len",0);        }});        put("clearRecord",new HashMap<String, Integer>(){{            put("write",44);            put("len",0);        }});        put("saveRecord",new HashMap<String, Integer>(){{            put("write",47);            put("len",0);        }});        put("pattern",new HashMap<String, Integer>(){{            put("read",81);            put("write",80);            put("len",0);            put("min",1);            put("max",3);        }});        put("broadcastInterval",new HashMap<String, Integer>(){{            put("read",83);            put("write",82);            put("len",2);            put("min",20);            put("max",2000);        }});        put("broadcastCycle",new HashMap<String, Integer>(){{            put("read",85);            put("write",84);            put("len",2);            put("min",5);            put("max",1800);        }});        put("broadcastDuration",new HashMap<String, Integer>(){{            put("read",87);            put("write",86);            put("len",2);        }});        put("saveInterval",new HashMap<String, Integer>(){{            put("read",89);            put("write",88);            put("len",2);        }});        put("transmittedPower",new HashMap<String, Integer>(){{            put("read",91);            put("write",90);            put("len",1);        }});        put("saveCover",new HashMap<String, Integer>(){{            put("read",93);            put("write",92);            put("len",1);        }});        put("tempAlarm",new HashMap<String, Integer>(){{            put("read",95);            put("write",94);            put("len",4);        }});        put("humidityAlarm",new HashMap<String, Integer>(){{            put("read",97);            put("write",96);            put("len",4);        }});        put("lumen",new HashMap<String, Integer>(){{            put("read",99);            put("write",98);            put("len",1);        }});        put("time",new HashMap<String, Integer>(){{            put("read",101);            put("write",100);            put("len",4);        }});        put("deviceName",new HashMap<String, Integer>(){{            put("read",103);            put("write",102);            put("len",8);        }});        put("ledOpen",new HashMap<String, Integer>(){{            put("read",107);            put("write",106);        }});        put("relay",new HashMap<String, Integer>(){{            put("read",109);            put("write",108);        }});        put("lightSensorOpen",new HashMap<String, Integer>(){{            put("read",111);            put("write",110);        }});        put("readDinVoltage",new HashMap<String, Integer>(){{            put("read",0x91);        }});        put("dinStatusEvent",new HashMap<String, Integer>(){{            put("read",0x93);            put("write",0x92);        }});        put("readDinStatusEventType",new HashMap<String, Integer>(){{            put("read",0x94);        }});        put("doutStatus",new HashMap<String, Integer>(){{            put("read",0x96);            put("write",0x95);        }});        put("readAinVoltage",new HashMap<String, Integer>(){{            put("read",0x97);        }});        put("setPositiveNegativeWarning",new HashMap<String, Integer>(){{            put("read",0x99);            put("write",0x98);        }});        put("getAinEvent",new HashMap<String, Integer>(){{            put("read",0x9a);        }});        put("getOneWireDevice",new HashMap<String, Integer>(){{            put("read",0x9B);        }});        put("sendCmdSequence",new HashMap<String, Integer>(){{            put("write",0x9C);            put("len",200);        }});        put("sequential",new HashMap<String, Integer>(){{            put("read",0x9E);            put("write",0x9D);        }});        put("oneWireWorkMode",new HashMap<String, Integer>(){{            put("read",0xA0);            put("write",0x9F);        }});        put("rs485SendData",new HashMap<String, Integer>(){{            put("read",0xA2);            put("write",0xA1);            put("len",200);        }});        put("rs485BaudRate",new HashMap<String, Integer>(){{            put("read",0xA4);            put("write",0xA3);        }});        put("rs485Enable",new HashMap<String, Integer>(){{            put("read",0xA6);            put("write",0xA5);        }});        put("longRangeEnable",new HashMap<String, Integer>(){{            put("read",0x32);            put("write",0x31);        }});        put("broadcastType",new HashMap<String, Integer>(){{            put("read",0x83);            put("write",0x82);        }});        put("gSensorEnable",new HashMap<String, Integer>(){{            put("read",0x85);            put("write",0x84);        }});        put("shutdown",new HashMap<String, Integer>(){{            put("write",0x86);        }});        put("readVinVoltage",new HashMap<String, Integer>(){{            put("read",0x30);        }});        put("doorEnable",new HashMap<String, Integer>(){{            put("read",0x88);            put("write",0x87);        }});        put("gSensorSensitivity",new HashMap<String, Integer>(){{            put("read",0x8a);            put("write",0x89);        }});        put("gSensorDetectionDuration",new HashMap<String, Integer>(){{            put("read",0x8c);            put("write",0x8b);        }});        put("gSensorDetectionInterval",new HashMap<String, Integer>(){{            put("read",0x8e);            put("write",0x8d);        }});        put("beaconMajorSet",new HashMap<String, Integer>(){{            put("read",0x78);            put("write",0x77);        }});        put("beaconMinorSet",new HashMap<String, Integer>(){{            put("read",0x7a);            put("write",0x79);        }});        put("eddystoneNIDSet",new HashMap<String, Integer>(){{            put("read",0x7c);            put("write",0x7b);        }});        put("eddystoneBIDSet",new HashMap<String, Integer>(){{            put("read",0x7e);            put("write",0x7d);        }});        put("readExtSensorType",new HashMap<String, Integer>(){{            put("read",9);            put("len",1);        }});    }};    public static String replaceAll(String src,String input,String replace){        String source = src;        while (source.contains(input)){            source = source.replace(input,replace);        }        return  source;    }    public static String binaryFormat(String binaryStr,int len){        int binaryLen = binaryStr.length();        if(binaryLen >= len){            return binaryStr.substring(binaryLen - len ,binaryLen);        }else{            int fixZeroLen = len - binaryLen;            String fixZero = "";            for(int i = 0;i < fixZeroLen;i++){                fixZero += "0";            }            return fixZero + binaryStr;        }    }    private static String[] binaryArray =            {"0000","0001","0010","0011",                    "0100","0101","0110","0111",                    "1000","1001","1010","1011",                    "1100","1101","1110","1111"};    public static String bytes2BinaryStr(byte[] bArray){        String outStr = "";        int pos = 0;        for(byte b:bArray){            //����λ            pos = (b&0xF0)>>4;            outStr+=binaryArray[pos];            //����λ            pos=b&0x0F;            outStr+=binaryArray[pos];        }        return outStr;    }    public static int calCrc(byte[] calArray,int len){        int crc = 0xff;        for (int j = 0; j < len; j++) {            crc = crc ^ calArray[j];            for (int i = 0; i < 8; i++) {                if ((crc & 0x80) == 0x80) {                    crc = (crc << 1) ^ 0x31;                } else {                    crc = crc << 1;                }            }        }        return crc & 0xff;    }    public static byte[] getInterActiveCmd(String pwd,Integer cmdHead,byte[] content){        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();        try {            outputStream.write(pwd.getBytes());            outputStream.write(cmdHead);            if(content != null){                outputStream.write(content, 0, content.length);            }            byte[] realContent = outputStream.toByteArray();            int crc = MyUtils.calCrc(realContent,realContent.length);            outputStream.write(crc);            return outputStream.toByteArray();        } catch (Exception e) {            e.printStackTrace();        } finally {            try {                outputStream.close();            } catch (IOException e) {                e.printStackTrace();            }        }        return new byte[]{};    }    public static byte[] binaryToByte(String binaryStr){        if(binaryStr.length() % 8 != 0){            return new byte[]{};        }        int len = binaryStr.length() / 8;        byte[] result = new byte[len];        for(int i = 0 ;i < len;i++){            String highPosStr = binaryStr.substring(i*8,i * 8 + 4);            int highPos = 0;            for(;highPos < binaryArray.length;highPos++){                if(highPosStr.equals(binaryArray[highPos])){                    break;                }            }            String lowPosStr = binaryStr.substring(i * 8 + 4, i *8 + 8);            int lowPos = 0;            for(;lowPos < binaryArray.length;lowPos++){                if(lowPosStr.equals(binaryArray[lowPos])){                    break;                }            }            int value = highPos * 16 + lowPos;            result[i] = (byte)value;        }        return result;    }    public static String bytes2HexString(final byte[] bytes, int index) {        if (bytes == null || bytes.length <= 0 || index >= bytes.length) {            return null;        }        StringBuilder builder = new StringBuilder("");        for (int i = index; i < bytes.length; ++i) {            String hex = Integer.toHexString(bytes[i] & 0xFF);            if (hex.length() < 2) {                builder.append('0');            }            builder.append(hex);        }        return builder.toString();    }    public static byte[] hexString2Bytes(String hexStr) {        String hex = hexStr.replace("0x", "");        StringBuffer buffer = new StringBuffer(hex);        if (buffer.length() % 2 != 0) {            buffer.insert(0, '0');        }        final int size = buffer.length() / 2;        byte[] bytes = new byte[size];        for (int i = 0; i < size; ++i) {            bytes[i] = (byte) Integer.parseInt(buffer.substring(i * 2, (i + 1) * 2), 16);        }        return bytes;    }    public static long littleEndianBytes2Long(byte[] bytes) {        long l = 0;        for(int i = bytes.length - 1; i >=0; i--) {            l = l << 8;            l |= bytes[i];        }        return l;    }    public static long bytes2Long(byte[] bytes) {        long l = 0;        for(int i = 0; i < bytes.length; i++) {            l = l << 8;            l |= bytes[i];        }        return l;    }    public static long binStr2Long(final byte[] binaryStr) {        try {            return Long.parseLong(new String(binaryStr), 2);        } catch (NumberFormatException e) {            e.printStackTrace();        }        return 0;    }    public static byte[] short2Bytes(int number) {        byte[] bytes = new byte[2];        for (int i = 1; i >= 0; i--) {            bytes[i] = (byte)(number % 256);            number >>= 8;        }        return bytes;    }    public static int bytes2Short(byte[] bytes, int offset) {        if (bytes != null && bytes.length > 0 && bytes.length > offset) {            if ((bytes.length - offset) >= 2) {                short s = (short)(bytes[offset + 1] & 0xFF);                return ((int) s) | ((bytes[offset] << 8) & 0xFF00);            }        }        throw new IllegalArgumentException("invalid bytes length!");    }    public static int byte2SignShort(byte[] inBytes,int offset){        if (inBytes != null && inBytes.length > 0 && inBytes.length > offset && (inBytes.length - offset) >= 2) {            byte[] bytes = Arrays.copyOfRange(inBytes,offset,offset + 2);            short s = ByteBuffer.wrap(bytes).getShort();            int i = s & 0xffff;            if ((i & 0x8000) > 0) {                i = i - 65535 + 1;            }            return  i;        }        throw new IllegalArgumentException("invalid bytes length!");    }    public static int bytes2Integer(byte[] bytes, int offset) {        return ByteBuffer.wrap(bytes, offset, 4).asIntBuffer().get();    }    public static long unsignedLittleEndian4BytesToInt(byte[] buf, int pos) {        int firstByte = 0;        int secondByte = 0;        int thirdByte = 0;        int fourthByte = 0;        int index = pos;        firstByte = (0x000000FF & ((int) buf[index+ 3]));        secondByte = (0x000000FF & ((int) buf[index + 2]));        thirdByte = (0x000000FF & ((int) buf[index + 1]));        fourthByte = (0x000000FF & ((int) buf[index ]));        index = index + 4;        return ((long) (firstByte << 24 | secondByte << 16 | thirdByte << 8 | fourthByte)) & 0xFFFFFFFFL;    }    public static long unsigned4BytesToInt(byte[] buf, int pos) {        int firstByte = 0;        int secondByte = 0;        int thirdByte = 0;        int fourthByte = 0;        int index = pos;        firstByte = (0x000000FF & ((int) buf[index]));        secondByte = (0x000000FF & ((int) buf[index + 1]));        thirdByte = (0x000000FF & ((int) buf[index + 2]));        fourthByte = (0x000000FF & ((int) buf[index + 3]));        index = index + 4;        return ((long) (firstByte << 24 | secondByte << 16 | thirdByte << 8 | fourthByte)) & 0xFFFFFFFFL;    }    public static byte[] unSignedInt2Bytes(long num) {        byte[] byteNum = new byte[4];        for (int ix = 0; ix < 4; ++ix) {            int offset = 32 - (ix + 1) * 8;            byteNum[ix] = (byte) ((num >> offset) & 0xff);        }        return byteNum;    }    public static byte[] long2Bytes(long num) {        byte[] byteNum = new byte[8];        for (int ix = 0; ix < 8; ++ix) {            int offset = 64 - (ix + 1) * 8;            byteNum[ix] = (byte) ((num >> offset) & 0xff);        }        return byteNum;    }    public static float bytes2Float(byte[] bytes, int offset) {        int value;        value = bytes[offset];        value &= 0xff;        value |= ((long) bytes[offset + 1] << 8);        value &= 0xffff;        value |= ((long) bytes[offset + 2] << 16);        value &= 0xffffff;        value |= ((long) bytes[offset + 3] << 24);        return Float.intBitsToFloat(value);    }    public static float littleEndianBytes2Float(byte[] bytes, int offset) {        int value;        value = bytes[offset+3];        value &= 0xff;        value |= ((long) bytes[offset + 2] << 8);        value &= 0xffff;        value |= ((long) bytes[offset + 1] << 16);        value &= 0xffffff;        value |= ((long) bytes[offset] << 24);        return Float.intBitsToFloat(value);    }    public static boolean getBitFromByte(byte b, int index) {        if (index<0 || index>7) {            throw new IllegalArgumentException("index "+index +" is out of bound");        }        return (b>>index & 0x01) == 0x01;    }    public static String parseSoftwareVersion(byte[] bytes,int index){        if(bytes.length < index + 3){            return "";        }        int all = bytes2Short(bytes,index);        int version1 = bytes[index] >> 5;        int version2 = (all & 0x1FFF) >> 7;        int version3 = all & 0x7f;        byte testByte = bytes[index + 2];        if(testByte != 0 && bytes.length != 7){            String testDesc = new String(new byte[]{testByte});            return String.format("%d.%d.%02d %s",version1,version2,version3,testDesc);        }else{            return String.format("%d.%d.%02d",version1,version2,version3);        }    }    public static String parseHardwareVersion(byte hardwareByte){        int hardwareInt = Integer.valueOf(Integer.toHexString(hardwareByte & 0xFF));        if(hardwareInt < 10.0f){            return String.valueOf((hardwareInt - 1 + 10) / 10.0f);        }        return String.valueOf(hardwareInt / 10.0f);    }    //    public static String[] srcHisData = {"[\"00004010\",\"00003f2400375e68613746d96005962d2d0b42d00b458000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"00cccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"]",//            "[\"01004010\",\"0400ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0440ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0480ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"04c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0500ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0540ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0580ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"05c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0600ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0640ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0680ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"06c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0700ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0740ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0780ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"07c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"]",//            "[\"02004010\",\"0800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0840ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0880ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"08c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0900ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0940ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0980ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"09c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0a00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0a40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0a80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0ac0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0b00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0b40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0b80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0bc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"]",//            "[\"03004010\",\"0c00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0c40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0c80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0cc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0d00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0d40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0d80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0dc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0e00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0e40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0e80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0ec0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0f00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0f40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0f80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0fc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"]",//            "[\"04004010\",\"1000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1040ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1080ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"10c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1100ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1140ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1180ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"11c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1200ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1240ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1280ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"12c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1300ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1340ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1380ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"13c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"]",//            "[\"05004010\",\"1400ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1440ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1480ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"14c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1500ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1540ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1580ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"15c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1600ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1640ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1680ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"16c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1700ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1740ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1780ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"17c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"]",//            "[\"06004010\",\"1800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1840ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1880ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"18c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1900ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1940ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1980ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"19c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1a00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1a40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1a80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1ac0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1b00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1b40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1b80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1bc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"]",//            "[\"07004010\",\"1c00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1c40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1c80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1cc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1d00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1d40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1d80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1dc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1e00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1e40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1e80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1ec0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1f00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1f40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1f80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1fc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"]",//            "[\"08004010\",\"2000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2040ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2080ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"20c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2100ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2140ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2180ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"21c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2200ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2240ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2280ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"22c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2300ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2340ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2380ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"23c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"]",//            "[\"09004010\",\"2400ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2440ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2480ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"24c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2500ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2540ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2580ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"25c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2600ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2640ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2680ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"26c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2700ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2740ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2780ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"27c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"]",//            "[\"0a004010\",\"2800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2840ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2880ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"28c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2900ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2940ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2980ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"29c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2a00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2a40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2a80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2ac0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2b00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2b40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2b80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2bc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"]",//            "[\"0b004010\",\"2c00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2c40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2c80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2cc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2d00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2d40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2d80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2dc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2e00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2e40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2e80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2ec0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2f00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2f40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2f80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2fc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"]"//    };    public static String[] srcHisData = {"[\"00004010\"," +            "\"0000ef7c04095eeb7855d01464d435b5195fba8896a0a5a7a9c9aab264b5fb6f24c5993972e49cbf26afc9c4b2753dd93ea24f1f93d864fa7933564a57924624859b\"," +            "\"00406d91c66d5ab56dab56dab56ad2d5a5e0b45a2d2d5ab56f1e80d06834260fba1cffdd147b461dd1e73495cd2b6f4cdad3a674ed7fba86aea3abf7fea1a7ee9ea7\"," +            "\"0080a74ae9b2da64b7bd69aafa72be9e2da82b3cd4b575452d525752d4d4646504ed3f4f4f4dd38474f12d42475450d593f57ced623bc7baba7eaca1aac86a921a9e\"," +            "\"00c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"," +            "\"010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"," +            "\"014000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"," +            "\"018000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"," +            "\"01c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"," +            "\"020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"," +            "\"024000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"," +            "\"028000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"," +            "\"02c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"," +            "\"030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"," +            "\"034000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"," +            "\"038000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"," +            "\"03c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"" +            "]",            "[\"01004010\"," +                    "\"0400ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0440ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0480ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"04c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0500ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0540ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0580ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"05c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0600ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0640ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0680ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"06c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0700ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0740ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0780ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"07c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"]",            "[\"02004010\",\"0800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0840ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0880ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"08c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0900ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0940ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0980ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"09c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0a00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0a40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0a80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0ac0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0b00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0b40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0b80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0bc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"]",            "[\"03004010\",\"0c00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0c40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0c80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0cc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0d00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0d40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0d80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0dc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0e00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0e40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0e80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0ec0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0f00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0f40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0f80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"0fc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"]",            "[\"04004010\",\"1000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1040ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1080ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"10c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1100ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1140ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1180ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"11c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1200ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1240ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1280ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"12c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1300ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1340ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1380ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"13c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"]",            "[\"05004010\",\"1400ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1440ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1480ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"14c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1500ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1540ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1580ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"15c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1600ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1640ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1680ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"16c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1700ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1740ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1780ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"17c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"]",            "[\"06004010\",\"1800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1840ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1880ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"18c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1900ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1940ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1980ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"19c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1a00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1a40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1a80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1ac0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1b00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1b40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1b80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1bc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"]",            "[\"07004010\",\"1c00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1c40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1c80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1cc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1d00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1d40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1d80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1dc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1e00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1e40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1e80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1ec0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1f00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1f40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1f80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"1fc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"]",            "[\"08004010\",\"2000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2040ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2080ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"20c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2100ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2140ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2180ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"21c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2200ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2240ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2280ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"22c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2300ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2340ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2380ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"23c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"]",            "[\"09004010\",\"2400ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2440ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2480ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"24c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2500ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2540ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2580ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"25c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2600ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2640ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2680ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"26c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2700ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2740ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2780ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"27c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"]",            "[\"0a004010\",\"2800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2840ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2880ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"28c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2900ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2940ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2980ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"29c0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2a00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2a40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2a80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2ac0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2b00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2b40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2b80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2bc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"]",            "[\"0b004010\",\"2c00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2c40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2c80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2cc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2d00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2d40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2d80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2dc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2e00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2e40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2e80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2ec0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2f00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2f40ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2f80ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\"2fc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"]"    };    private static void sortOriginHisData(ArrayList<ArrayList<byte[]>> originHistoryList){        ArrayList<byte[]> tempItem;        for(int i = 0;i < originHistoryList.size() - 1;i++){            ArrayList<byte[]> itemI = originHistoryList.get(i);            int indexI = itemI.get(0)[0] & 0xff;            for(int j = i + 1;j < originHistoryList.size();j++){                ArrayList<byte[]> itemJ = originHistoryList.get(j);                int indexJ = itemJ.get(0)[0] & 0xff;                if(indexJ < indexI){                    tempItem = itemI;                    itemI = itemJ;                    itemJ = tempItem;                    originHistoryList.set(i,itemI);                    originHistoryList.set(j,itemJ);                }            }        }        for(ArrayList<byte[]> item : originHistoryList){            byte[] temp;            for(int i = 0;i < item.size() - 1;i++){                byte[] itemI = item.get(i);                int indexI = MyUtils.bytes2Short(itemI,0);                for(int j = i+1;j < item.size();j++){                    byte[] itemJ = item.get(i);                    int indexJ = MyUtils.bytes2Short(itemJ,0);                    if(indexJ < indexI){                        temp = itemI;                        itemI = itemJ;                        itemJ = temp;                        item.set(i,itemI);                        item.set(j,itemJ);                    }                }            }        }    }    public static void sendHistoryContentToMail(ArrayList<ArrayList<byte[]>> originHistoryList,ArrayList<byte[]> dealData){        final StringBuilder sb = new StringBuilder();        for(ArrayList<byte[]> item : originHistoryList){            for(int i = 1;i < item.size();i++){                sb.append(bytes2HexString(item.get(i),0));                sb.append("<br>");                sb.append("<br>");                sb.append("<br>");            }        }        sb.append("<br>");        sb.append("<br>");        sb.append("deal data<br>");        sb.append("<br>");        for (byte[] item : dealData){            sb.append(bytes2HexString(item,0));            sb.append("<br>");            sb.append("<br>");            sb.append("<br>");        }        final String to = "1024919409@qq.com";        final String from = "1024919409@qq.com";        Properties properties = new Properties();        properties.put("mail.transport.protocol", "smtp");        properties.put("mail.smtp.host", "smtp.qq.com");        int port = 465;        properties.put("mail.smtp.port", port);        properties.put("mail.smtp.auth", "true");        properties.put("mail.smtp.timeout","60000");        properties.put("mail.smtp.connectiontimeout", "60000");        properties.put("mail.smtp.socketFactory.fallback", "false");        if (port == 465) {            properties.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");            properties.put("mail.smtp.ssl.enable", "true");        }        if(port == 587){            properties.put("mail.smtp.starttls.enable","true");        }        // 获取默认session对象        Session session = Session.getDefaultInstance(properties,                new Authenticator() {                    protected PasswordAuthentication getPasswordAuthentication() {                        // 登陆邮件发送服务器的用户名和密码                        return new PasswordAuthentication("1024919409@qq.com", "jiuyou1989exia");                    }                });        // 创建默认的 MimeMessage 对象        final MimeMessage message = new MimeMessage(session);        // 发送消息        new AsyncTask<String,Void, JSONObject>(){            @Override            protected JSONObject doInBackground(String... strings) {                try {                    message.setFrom(new InternetAddress(from));                    message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));                    message.setSubject("TFTBLE data");                    message.setContent(sb.toString(), "text/html;charset=utf-8");                    Transport.send(message);                } catch (MessagingException e) {                }                return null;            }        }.execute();    }    public static ArrayList<byte[]> mergeOriginHisData(ArrayList<ArrayList<byte[]>> originHistoryList){        MyUtils.sortOriginHisData(originHistoryList);        ArrayList<byte[]> result = new ArrayList<>();        for(ArrayList<byte[]> item : originHistoryList){            byte[] itemAllData = new byte[64 * 16];            for(int i = 1;i < item.size();i++){                byte[] byteData = item.get(i);                for(int j = 2;j < byteData.length;j++){                    itemAllData[(i - 1) * 64 + j - 2] = byteData[j];                }            }            result.add(itemAllData);        }        return result;    }    public final static ArrayList<String> hexStrList = new ArrayList<String>(){{        add("ef7c04095eeb7855d01464d435b5195fba8896a0a5a7a9c9aab264b5fb6f24c5993972e49cbf26afc9c4b2753dd93ea24f1f93d864fa7933564a57924624859b6d91c66d5ab56dab56dab56ad2d5a5e0b45a2d2d5ab56f1e80d06834260fba1cffdd147b461dd1e73495cd2b6f4cdad3a674ed7fba86aea3abf7fea1a7ee9ea7a74ae9b2da64b7bd69aafa72be9e2da82b3cd4b575452d525752d4d4646504ed3f4f4f4dd38474f12d42475450d593f57ced623bc7baba7eaca1aac86a921a9e86a623a928ea325a84969fa5a78969ca5fa4d13b64bd3bd256a5b24ea5b246a556c8fab7a46d6b6db6f5b6db6db6ad2d2d5b7ad5b6adb56d568005a2d016ad55c0596474f3efcfbe79e685b3e68833a26cfdd17634698d1e5fcf34917d275fefcd244f46d1d184fee8d29a40b692afa52be972fa64b69b2be69d2ba76981efaf9f5efbefbfbdf56c98296c962b6c942d6db246bdb685cb2e2c2d5b6adb6db6db56db6db6db6adb6db56dab56af5a5a2d5a5a5ab45a2d2d0b920cddc90a76cb343ddd1277cd1777469df347ddf248ddbbfed5b6db6f1e7d9236acb2cb2c92b6acb2cb2cb2cb17e4bd9b64ad9b6d9266adb6d2e2e59246ddb6db6c8e36b6ab4b56978b45aa85a05a2d2d2a5a1685a00016a43a1bf7e42a1b6dbd5596597243a4b2cb24524b24625b2cb247a5b924535c9279ec92d9e4c279339e4da693996cbb644fa3645cb25124bba8f0f9e4a641a9cf7df3ed9756dfb6535ab65219b65118b6f5f94052d93e5af5b7ef5e93662f499ad264c5b25cc5b7a4a59b6dbd6c91357adb6d5b6db7adb6db6db6db6db6dbd6dab6d5b6da5a5e05a2d5a5ab4b4b552d02c2c5955965cb241e190a8a43629108a44e29168a46a1d1d7e489dd27734b5b9326e4dda93b6a4f9a94166cd464a521594a4e52d5b25313aabb6db6f5b6fb64a3a529085728e8d572caa5252a96deb6d941524f94bd272ac9b2b6c98ad6c96ad7a4a57b6dbd246c5b6db6db6deb6d5b6adb6ab6d5b6ad5a5ab56adb555ab4b42d169696af681c3a071f9a0f1f9a1b268847a27179a2f168cc9e7cf347e4f3cf90c92464d278fee95c7a5d17dd33834d59d3e5b5018d435f5295f35353d4b475391d5543df9ab686b41dac6479ac25eb219af2679b085ec617af866b91bad476b11faba7eaba1aa686a721a968ea821aa8835410d4d475293d443f4f8dd38374c4cd2e3a4b94b56debd24ec5b6c91336db7adb6d9196af5b6db6adb6d5b6de5b6adb4b56da5a5ab56968b4b56d56968b401673cf3cf3cf3cf3cd0977cd0d77cd1383469fd207b4e9ad3e63eea225e6a41fa9886a8a5aae8ead23ace7eb021ab686aba3aa88ea8a3fb5352f5e7976d4a69928e5ca321725291b2dbd6ca2a778b6d93f52d93a52d935564c95bd25abdb6db24ebdb244bdb23cbde91a62db6db6db60");        add("b77c04445ef4ed56449964b6d5b6ad5b6adb56db6ad5ab56ad0002d0b45a17a3f5fb9205048341214fc86bb220ed976cb0b8b2cb2e5967966903fe4923fe694bfe6983da6af69dbb4adedb7e4d5bb6db6db6db6fdb6db6db6db6db6db6da92072cb2cbb65fb2abb65b6deb6ab2eadb6d91f72db6469cb6dbd228edb6db6db6db6db6adb6d5b55ab56dab6db6db56db6dab4b402d16805965cb2c9007e411f9087a42de90e7a449e9145e45d691b6b47db9256f4a9b92d6eed9639ef4f24cdc937764f1d94076515c94a7253db9536e55da95b66c9606258d8bb2cebddb2edcacb6fcb3292c6a4af292b4a4ab297a5495b6db6d94b56521594556505493d52f5b4e136493656db64c56b64b5692a5ed9265e48d7bd23ec5b236cdb22ecdb6deb6db6db6db6db6daad5b6ad5ab6d5ab4b568b42d55682d0155cbb65cb2ed972cf3421ef3431ef3cd117bcf345def346ded1e7bcd227acf2cedefba40efef7f79d516db6c8c416db6de2ab2c2c56b56adb6db6d5b6dfb6db56db6adb4b6d5ab6d5a2d002d0002d02ab4055723fe39029241a49099243649118e45239178ec91b8ee5965cd2297e5924f3f92573f9a5f3699cda6f2f9f74fa3fba8909efafad446b515df3525e94c76c95072cbbe5dbf6ca733a96b4a3ad288b4a0af280ac9e27276b59280b4a22f28ebd85b6ca12f27ebc9db126ec49a33260cc96b3254cd4b6c2d49da64b6f490b76de91c72db645ddb6db6f5b6db6db6deb6db6dbd6dab6db6d5b796adb56ada96ad2d2da88f696c8fa9a3f669019641649089242e3bb2211489c576cb091672461991b624817d256e4a9c930764d1d939764f9d9427a519d94976535d95063555695752fcaaab66ada7abc9eb227ad49eb6a5ad484b31b2c26cae992b264ab196ca9196de94d3afca41f7afdeb6a5cb2cb2cb2db65152b6501393d4e4e939374e4d13931524b9492b56f5b252c2bb17af5f5db2db6f5b244c5b6c8eb36c8cb37adb644dab6f5b6db6db6dab6f5ab4b45a5ab4b42d552010592090483c121704873f76449eb0168b1558b2db6dbf6db7adb6d55e79a210590000c52164d178646a191e8648a19278a4ae192e864c60b24d60ad6dfb6db6db64adeb6dbf6db6db6db6db6c8e3b6db6db7adb2469eb2479eb2c5fb6db6d9187adb6db6445eb6ab6db56db6adb56db6ad5b6968b42d2d2d5a5a23ea2b23fa3b240e39068e426290c8aec88c32290dd91982edd91e7ac9227acbb61f296495b725ed49a33270c49d257e4e5393c564fd694352c94756cbabf7acb1a9695cb16ca4a728c9ca12727ea49e296c9c2972ed9624f119383e4d109334ee15db25ea5b254a5b24cac91ab7af5a5b6db234c5b6db6db7adb6db6db56ad2f168b4b6d2d5ab4b401685ab4b5680b2e2cb2cb2c9086e429d90f76451d91a73489b9286a4b998000");        add("9a7c043d5efeeca24d1964939624f159405a50d69465a5255b25396b254969554bef8fdaa497e94d4e52939474e511394152d93d52db64e14b64d14b64c14b6f596596596595db6db25ea4962b6c942b6c91ab7a47d6b6db6db6db6db6db6db6ab4b45a5a5aacb41685a2d2d2d5a5aa968b4b162c9076a431c9126e461a91d664859926664a58b2cb24bd8933634dd8d3b5e4f54fb2829ca22564a42572cb3cd4e4653ce5b72e5c955475610b96592ac8ca8237b529194746f4a1a4b527e949e256961705b6dab6d5b6db6c98a77adb405ab6db6db6db6db6dbd6db6db6adb56adb56d56ad5a5ab569696aab4a9658b9659659659659659659240c5965924cc449d864b2cb2c92e62caec5965965962db2ed965965858582c16adb6db6db6db6d9325adb64b56b6db649d6b6db6db6db6db6db6db6db6ab6db56ad5ab4b4b4b4b45a1685a0b56adaac59558b2c2c0b416ad5e2d2ab165c90d7aec88bb65922ced9648e3b6490bb248ec93bb659258eacb016dab6db56db6db6db6db6db6c8dbb6de02c2d5ab6d5b6adb56da5b6dab56dab56ad5a5a5a2f169696db52cb2cb2cb2cb2cb05b6adb6db56ac596596592170592210489c122d05923505923f04914124b049441764b1fb24c1fb2cb2c9377ecba2d576db65b266e5eb4b6db6db64a5db6f5b6da5b6db6db6db6db6db6db6db7adb6db6db56db6ad2d5b6ad2d5a5ab5405f642d5ab4b45cb2cb2cb2cb2cb162cb2cb2cb1659659648bbf238fc903f248fc943f256fc973f262fc9a3f649cbf27afca0bd288f4a43d298f5db2545cb35492d554baf3bd532f54cdd50375510f1aa48ea7a3f9ebcf75252d464b5053d3e53dd3a5bd9365eda97ef576deb6daadb56db6c93b36db244cdeb6475ab6db6db6dbd6db6db6db6db216ddab6db6d5ab6d5ab4b4b4b4b6d5b6ad8f98a3ea4b91fd2792052482c964854921b1c88c72291c8c452390e904324705924efc95bf25ef49939268d24cd893062f2f2d5be79a62d79a6ece9d2fec9aaffbee9cb127ebea22ba92aea72baa6aeaba92b6a5dbabd2b09caaa72a29ea72729caca6a7294a451d464944525053bd27aa49d2926cac99ab260ade92b5ad9265ad9225f47dbd1a77f7b6e8b39e2461e5af3c5b55b7a44e0bd6deb6e8bb5c88c365db2d8c426245587f7e1bd8867a61a6d8647a18ad867ba18a2861ba19af86196186e867be18a5861ba19ef862a6182e866bed860ba196fb2182d864be19ef860b2192f867be17eb862be1a2f85faa18af867c22f308e1be3cee8fcba406e904bac909bac90dbbcb92277c8b49a332c8e4723ee490296e8fafa3ede913ba4cf695bf25ed59a64b499a9a66bfcf3ca1cb0596dfb6dbda52d68b4520f2c7fd31f9548b43248ec953725cd5db2e5db2ed816adbf6db6db256bdb7adaadb555a2d5b6adb6ab56db6a");        add("107c026b5f08db9a46db645ab6db6db56db6dab6db6db56da5abcb5696a415fb56dab4b551557697ab5e5f5b57af5d3b1f3e67fc9a052682c9a111e85c7a1f1e8947a2b1e8cc7a3b1e90c7a4b169443e69641f5fdebd7cfbe77efbee93bbfbdb6485eb6d91c7af5b6c8b3d7af5b6af1685a2a5a016802d2a002d000a9680a80b0582cacb015d80582b02cac05760002d545b51582db55ad150b6a0b6d0b401680b2daadb64161bd6dea95170b2c5955965972c90ea6e4895722b5d92355c8ed76491576493d72575c97572675c9bd7277549fd328744a3cf29534a6c964a9472aaf4aaaf5cab252aea2561295742d9553afde951456d45b6db29495e9465200050556493d5ad9385ad9345ad92f5ad92a5af4932f246bdb23ebdb236c5b6db22ac5eb6db6f487b85c162d16aab4b6d5ab56ad5ab568b56969696a4025bb65965802c5962c162cad62a2db2fd85760b45d0b015d80b02b02d5b6debc0b150b2d0aad2d5ab152b1605a00b4a9245048fbf230f489c122105eaeb2c        add("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");        add("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");        add("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");        add("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");        add("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");        add("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");        add("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");        add("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");    }};    public static boolean checkOriginHisDataCrc(byte[] byteDataArray){        int srcCrc = byteDataArray[0] & 0xff;        byte[] needCheckCrc = Arrays.copyOfRange(byteDataArray,1,byteDataArray.length);        int myCalCrc = calCrc(needCheckCrc,needCheckCrc.length);        if(myCalCrc != srcCrc){            return false;        }        return true;    }    //        for(String jsonStr : MyUtils.srcHisData){//            JSONArray srcItemArray = (JSONArray)JSONArray.parse(jsonStr);//            ArrayList<byte[]> curHistoryList = new ArrayList<>();//            for(int i = 0;i < srcItemArray.size();i++){//                String onRecordItem = srcItemArray.getString(i);//                curHistoryList.add(MyUtils.hexString2Bytes(onRecordItem));//            }//            orignHistoryList.add(curHistoryList);//        }//        ArrayList<byte[]> mergeData = MyUtils.mergeOriginHisData(orignHistoryList);//        for(byte[] byteDataArray : mergeData){//            boolean dataCorrect = MyUtils.checkOriginHisDataCrc(byteDataArray);//            if(dataCorrect){//                ArrayList<BleHisData> bleHisDataList = MyUtils.parseS02BleHisData(byteDataArray);//                showBleHisData.addAll(bleHisDataList);//                System.out.print("succ");//            }else{////                Toast.makeText(HistoryReportActivity.this,"Data not correct",Toast.LENGTH_LONG).show();//            }//        }    public static ArrayList<BleHisData> parseS02BleHisData(byte[] historyArray){        SimpleDateFormat tableDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.ENGLISH);        int timeInterval = (historyArray[1] & 0x3f) * ((historyArray[1] & 0x40) == 0x40 ? 10 : 5);        int dataCount = MyUtils.bytes2Short(historyArray,2);        long timestamp = MyUtils.bytes2Integer(historyArray,4);        long curTimestamp = 0;        ArrayList<BleHisData> result = new ArrayList<>();        if(dataCount == 0){            return result;        }        for(int j = 0;j < 4;j++){            int startIndex = 0;            if(j == 0){                startIndex = 8;                curTimestamp = timestamp;            }            BleHisData item = new BleHisData();            int prop = (historyArray[j * 256 + startIndex + 0] & 0x80) == 0x80 ? 1 : 0;            int value = MyUtils.bytes2Short(historyArray,j * 256 + startIndex + 0) & 0x7fff;            float temp =( ((value & 0x7FC0) >> 6) * 2 - 300 ) / 10.0f;            //float temp =( ((value & 0x7FC0) >> 6) * 4 - 600 ) / 10.0f;            float humidity = (value & 0x3F) * 2;            int battery = historyArray[j * 256 + startIndex + 2] & 0xff;            item.setProp(prop);            item.setTemp(temp);            item.setBattery(battery);            item.setHumidity(humidity);            item.setDate(new Date(curTimestamp * 1000));            result.add(item);            if(result.size() >= dataCount){                return result;            }            curTimestamp += timeInterval;            byte[] remainByte = Arrays.copyOfRange(historyArray, j * 256 + startIndex + 3, j * 256 + 256);            String remainBinaryStr = binary(remainByte, 2);            if(remainBinaryStr.length() < remainByte.length * 8){                int needFixLen = remainByte.length * 8 - remainBinaryStr.length();                for(int fixZero = 0 ;fixZero < needFixLen;fixZero++){                    remainBinaryStr = "0" + remainBinaryStr;                }            }            char[] remainBinaryChar = remainBinaryStr.toCharArray();            int i = 0;            int dataSize = remainBinaryChar.length;            while (i < dataSize){                char charItem = remainBinaryChar[i];                i++;                if(charItem == '0'){//not change                    BleHisData lastItem = result.get(result.size() - 1);                    BleHisData curItem = new BleHisData();                    curItem.setDate(new Date(curTimestamp * 1000));                    curItem.setHumidity(lastItem.getHumidity());                    curItem.setTemp(lastItem.getTemp());                    curItem.setBattery(lastItem.getBattery());                    curItem.setProp(lastItem.getProp());                    result.add(curItem);                    if(result.size() >= dataCount){                        return result;                    }                    curTimestamp += timeInterval;                }else{                    if(i >= dataSize){                        break;                    }                    char propStatus = remainBinaryChar[i];                    i++;                    if(i >= dataSize){                        break;                    }                    char tempHumidityStatus = remainBinaryChar[i];                    i++;                    if(tempHumidityStatus == '1'){                        if(i+2 > dataSize){                            break;                        }                        char firstChar = remainBinaryChar[i];                        i++;                        char secondChar = remainBinaryChar[i];                        i++;                        if(firstChar == '0' && secondChar == '0'){                            BleHisData lastItem = result.get(result.size() - 1);                            BleHisData curItem = new BleHisData();                            curItem.setDate(new Date(curTimestamp * 1000));                            curItem.setHumidity(lastItem.getHumidity());                            curItem.setTemp(lastItem.getTemp());                            curItem.setBattery(lastItem.getBattery());                            curItem.setProp(propStatus == '1' ? 1 : 0);                            result.add(curItem);                            if(result.size() >= dataCount){                                return result;                            }                            curTimestamp += timeInterval;                        }else if(firstChar == '0' && secondChar == '1'){//humidity change                            if(i >= dataSize){                                break;                            }                            char changeChar = remainBinaryChar[i];                            i++;                            if(changeChar == '0'){                                BleHisData lastItem = result.get(result.size() - 1);                                BleHisData curItem = new BleHisData();                                curItem.setDate(new Date(curTimestamp * 1000));                                curItem.setHumidity(lastItem.getHumidity() + 2);                                curItem.setTemp(lastItem.getTemp());                                curItem.setBattery(lastItem.getBattery());                                curItem.setProp(propStatus == '1' ? 1 : 0);                                result.add(curItem);                                if(result.size() >= dataCount){                                    return result;                                }                                curTimestamp += timeInterval;                            }else{                                BleHisData lastItem = result.get(result.size() - 1);                                BleHisData curItem = new BleHisData();                                curItem.setDate(new Date(curTimestamp * 1000));                                curItem.setHumidity(lastItem.getHumidity() - 2);                                curItem.setTemp(lastItem.getTemp());                                curItem.setBattery(lastItem.getBattery());                                curItem.setProp(propStatus == '1' ? 1 : 0);                                result.add(curItem);                                if(result.size() >= dataCount){                                    return result;                                }                                curTimestamp += timeInterval;                            }                        }else if(firstChar == '1' && secondChar == '0'){//temp change                            if(i >= dataSize){                                break;                            }                            char changeChar = remainBinaryChar[i];                            i++;                            if(changeChar == '0'){                                BleHisData lastItem = result.get(result.size() - 1);                                BleHisData curItem = new BleHisData();                                curItem.setDate(new Date(curTimestamp * 1000));                                curItem.setHumidity(lastItem.getHumidity());                                curItem.setTemp(lastItem.getTemp() + 0.2f);                                curItem.setBattery(lastItem.getBattery());                                curItem.setProp(propStatus == '1' ? 1 : 0);                                result.add(curItem);                                if(result.size() >= dataCount){                                    return result;                                }                                curTimestamp += timeInterval;                            }else{                                BleHisData lastItem = result.get(result.size() - 1);                                BleHisData curItem = new BleHisData();                                curItem.setDate(new Date(curTimestamp * 1000));                                curItem.setHumidity(lastItem.getHumidity());                                curItem.setTemp(lastItem.getTemp() - 0.2f);                                curItem.setBattery(lastItem.getBattery());                                curItem.setProp(propStatus == '1' ? 1 : 0);                                result.add(curItem);                                if(result.size() >= dataCount){                                    return result;                                }                                curTimestamp += timeInterval;                            }                        }else{                            if(i+2 > dataSize){                                break;                            }                            char changeFirstChar = remainBinaryChar[i];                            i++;                            char changeSecondChar = remainBinaryChar[i];                            i++;                            float tempChange = changeFirstChar == '0' ? 0.2f : -0.2f;                            int humidityChange = changeSecondChar == '0' ? 2 : -2;                            BleHisData lastItem = result.get(result.size() - 1);                            BleHisData curItem = new BleHisData();                            curItem.setDate(new Date(curTimestamp * 1000));                            curItem.setHumidity(lastItem.getHumidity() + humidityChange);                            curItem.setTemp(lastItem.getTemp() + tempChange);                            curItem.setBattery(lastItem.getBattery());                            curItem.setProp(propStatus == '1' ? 1 : 0);                            result.add(curItem);                            if(result.size() >= dataCount){                                return result;                            }                            curTimestamp += timeInterval;                        }                    }else{                        if(i+15 > dataSize){                            break;                        }                        char[] tempCharArray = Arrays.copyOfRange(remainBinaryChar, i, i + 9);                        i+=9;                        char[] humidityCharArray = Arrays.copyOfRange(remainBinaryChar,i,i+6);                        i+=6;                        long tempLong = binaryCharArrayToLong(tempCharArray);                        long humidityLong = binaryCharArrayToLong(humidityCharArray);                        float curTemp =(tempLong * 2 - 300 ) / 10.0f;                        float curHumidity = humidityLong * 2;                        BleHisData lastItem = result.get(result.size() - 1);                        BleHisData curItem = new BleHisData();                        curItem.setDate(new Date(curTimestamp*1000));                        curItem.setHumidity(curHumidity);                        curItem.setTemp(curTemp);                        curItem.setBattery(lastItem.getBattery());                        curItem.setProp(propStatus == '1' ? 1 : 0);                        result.add(curItem);                        if(result.size() >= dataCount){                            return result;                        }                        curTimestamp += timeInterval;                    }                }            }        }        return result;    }    public static void dealS10InvalidData(ArrayList<BleHisData> dataList){        for (BleHisData item :                dataList) {            final double THRESHOLD = .0001;            if(Math.abs(item.getTemp()-144.4) < THRESHOLD) {                item.setTemp(-999f);            }            if(Math.abs(item.getHumidity()-126) < THRESHOLD) {                item.setHumidity(-999);            }        }    }    public static ArrayList<BleHisData> parseS10BleGX112HisData(byte[] historyArray){        SimpleDateFormat tableDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.ENGLISH);        int timeInterval = (historyArray[1] & 0x3f) * ((historyArray[1] & 0x40) == 0x40 ? 10 : 5);        int dataCount = MyUtils.bytes2Short(historyArray,2);        long timestamp = MyUtils.bytes2Integer(historyArray,4);        long curTimestamp = 0;        System.out.println("time  :" + timestamp + ";timeInterval " + timeInterval);        ArrayList<BleHisData> result = new ArrayList<>();        if(dataCount == 0){            return result;        }        for(int j = 0;j < 4;j++){            int startIndex = 0;            if(j == 0){                startIndex = 8;                curTimestamp = timestamp;            }            byte[] remainByte = Arrays.copyOfRange(historyArray, j * 256 + startIndex, j * 256 + 256);            String remainBinaryStr = binary(remainByte, 2);            if(remainBinaryStr.length() < remainByte.length * 8){                int needFixLen = remainByte.length * 8 - remainBinaryStr.length();                for(int fixZero = 0 ;fixZero < needFixLen;fixZero++){                    remainBinaryStr = "0" + remainBinaryStr;                }            }            char[] remainBinaryChar = remainBinaryStr.toCharArray();            int i = 0;            char[] tempCharArray = Arrays.copyOfRange(remainBinaryChar, i, i + 12);            i+=12;            char[] batteryCharArray = Arrays.copyOfRange(remainBinaryChar,i,i+8);            i+=8;            long tempLong = binaryCharArrayToLong(tempCharArray);            long battery = binaryCharArrayToLong(batteryCharArray);            BleHisData item = new BleHisData();            item.setTemp(tempLong * 0.1f - 100);            item.setBattery((int)battery);            item.setDate(new Date(curTimestamp * 1000));            item.setHumidity(-999);            result.add(item);            if(result.size() >= dataCount){                return result;            }            curTimestamp += timeInterval;            while (i < remainBinaryChar.length){                char charItem = remainBinaryChar[i];                i++;                if(charItem == '0') {//not change                    BleHisData lastItem = result.get(result.size() - 1);                    BleHisData curItem = new BleHisData();                    curItem.setDate(new Date(curTimestamp * 1000));                    curItem.setTemp(lastItem.getTemp());                    curItem.setBattery(lastItem.getBattery());                    curItem.setProp(lastItem.getProp());                    curItem.setHumidity(-999);                    result.add(curItem);                    if(result.size() >= dataCount){                        return result;                    }                    curTimestamp += timeInterval;                }else{                    if( i+1 >= remainBinaryChar.length){                        break;                    }                    char type = remainBinaryChar[i];                    i++;                    if(type == '0'){// 12 bit temp                        if( i+12 >= remainBinaryChar.length){                            break;                        }                        tempCharArray = Arrays.copyOfRange(remainBinaryChar, i, i + 12);                        i+=12;                        tempLong = binaryCharArrayToLong(tempCharArray);                        BleHisData curItem = new BleHisData();                        curItem.setTemp(tempLong * 0.1f - 100);                        curItem.setBattery((int)battery);                        curItem.setDate(new Date(curTimestamp * 1000));                        curItem.setHumidity(-999);                        result.add(curItem);                        if(result.size() >= dataCount){                            return result;                        }                        curTimestamp += timeInterval;                    }else{ // inc 0.1 temp                        if( i+1 >= remainBinaryChar.length){                            break;                        }                        int isAdd = remainBinaryChar[i] == '0' ? 1 : -1;                        i++;                        BleHisData lastItem = result.get(result.size() - 1);                        BleHisData curItem = new BleHisData();                        curItem.setDate(new Date(curTimestamp * 1000));                        curItem.setTemp(lastItem.getTemp() + isAdd * 0.1f);                        curItem.setBattery(lastItem.getBattery());                        curItem.setHumidity(-999);                        result.add(curItem);                        if(result.size() >= dataCount){                            return result;                        }                        curTimestamp += timeInterval;                    }                }            }        }        return result;    }    public static long binaryCharArrayToLong(char[] binaryArray){        long result = 0;        for(int i = 0;i < binaryArray.length;i++){            int curByte = (int)binaryArray[i] - (int)('0');            result += curByte << (binaryArray.length - i - 1);        }        return result;    }    public static String binary(byte[] bytes, int radix){        return new java.math.BigInteger(1, bytes).toString(radix);// 这里的1代表正数    }    public static boolean isNetworkConnected(Context context) {        if (context != null) {            ConnectivityManager mConnectivityManager = (ConnectivityManager) context                    .getSystemService(Context.CONNECTIVITY_SERVICE);            NetworkInfo mNetworkInfo = mConnectivityManager.getActiveNetworkInfo();            if (mNetworkInfo != null) {                return mNetworkInfo.isAvailable();            }        }        return false;    }}